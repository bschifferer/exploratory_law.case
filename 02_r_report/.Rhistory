runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
shiny::runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
states
states$States
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
shiny::runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
df1 <- data_total_filtered()
head(df1)
input$option == option_type[1]
is.null(input$keyword)
aaa <- df1 %>%
group_by(year) %>%
summarise(count = sum(count, na.rm = TRUE)) %>%
ungroup() %>%
accumulate_by(~year)
head(aaa)
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
head(df1)
ddd <- df1 %>% group_by(year) %>% summarise(count = sum(count,
na.rm = TRUE)) %>% ungroup() %>% accumulate_by(~year)
head(ddd)
ddd
max(ddd)
max(ddd$count)
aa <- df_cases %>% filter(Case.type == 'cb_data_text_0_asylum')
head(aa)
max(aa$count)
max(aa$count, na.rm = TRUE)
df_cases <- read.csv('./data/df_cases.csv')
sum(df_cases$cb_data_text_0_asylum)
sum(df_cases$cb_data_text_0_asylum, na.rm=TRUE)
head(df_cases)
states
casetypes$
d
casetypes
casetypes[which(casetypes$label==input$keyword), 'columnname']
'abc'
'abc'[2:]
a = 'abc'
a[2:]
substr(a, 2)
substr(a, 2, 3)
length(filter_str)
runApp()
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
is.null(input$keyword)
input$keyword
filter_str = ''
if (!is.null(input$keyword)) {
for (keyword in input$keyword) {
filter_str = paste0(filter_str, '&', casetypes[which(casetypes$label==input$keyword), 'columnname'], '==1')
}
}
filter_str
filter_str = substr(filter_str, 2, length(filter_str))
df_cases %>%
filter(year >= input$input_year_slider[1] & year <= input$input_year_slider[2]) %>%
filter(state %in% input$state | is.null(input$state)) %>%
filter_(.dots = filter_str)
filter_str
filter_str = ''
if (!is.null(input$keyword)) {
for (keyword in input$keyword) {
filter_str = paste0(filter_str, '&', casetypes[which(casetypes$label==input$keyword), 'columnname'], '==1')
}
}
filter_str = substr(filter_str, 2, length(filter_str))
filter_str
filter_str = paste0(filter_str, '&', casetypes[which(casetypes$label==input$keyword), 'columnname'], '==1')
filter_str
filter_str = substr(filter_str, 2, length(filter_str))
filter_str
filter_str = paste0(filter_str, '&', casetypes[which(casetypes$label==keyword), 'columnname'], '==1')
length(filter_str)
nchar(filter_str)
filter_str = substr(filter_str, 2, nchar(filter_str))
filter_str
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
head(df_cases)
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
input
names(input)
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
input
input$tabselected
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
shiny::runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
casetypes_geo <- casetypes %>%
arrange(label)
casetypes_time <- casetypes %>%
arrange(label)#
casetypes_time
data_frame(columnname = c('all'), label=c('All'))
data_frame(columnname = c('all'), label=c('All')) %>% bind_rows(casetypes_time)
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
dim(df1)[1]
dim(df1)[1]
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
df_total_tmp <- data_total_filtered()
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
df_total_tmp <- data_total_filtered()
df_total_cases <- data_cases_filtered_time()
df_total_cases <- data_cases_filtered_time()
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
df_total_tmp <- data_total_filtered()
df_total_cases <- data_cases_filtered_geo()
data_cases_filtered_geo()
input$input_keyword_geo
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
df_total_tmp <- data_total_filtered()
df_total_cases <- data_cases_filtered_geo()
head(df_total_cases)
df_total_tmp <- df_total_tmp %>%
group_by(year) %>%
summarise(count = sum(count, na.rm = TRUE)) %>%
ungroup()
df_total_cases_tmp <- df_total_cases_tmp %>%
group_by(year) %>%
summarise(count = sum(count, na.rm = TRUE)) %>%
ungroup()
df_total_tmp <- data_total_filtered()
df_total_cases_tmp <- data_cases_filtered_geo()
df_total_tmp <- df_total_tmp %>%
group_by(year) %>%
summarise(count = sum(count, na.rm = TRUE)) %>%
ungroup()
df_total_cases_tmp <- df_total_cases_tmp %>%
group_by(year) %>%
summarise(count = sum(count, na.rm = TRUE)) %>%
ungroup()
head(df_total_cases_tmp)
df_total_tmp <- data_total_filtered()
df_total_cases_tmp <- data_cases_filtered_geo()
df_total_tmp <- df_total_tmp %>%
group_by(year) %>%
summarise(count = sum(count, na.rm = TRUE)) %>%
ungroup()
df_total_cases_tmp <- df_total_cases_tmp %>%
group_by(year) %>%
summarise(count = sum(count, na.rm = TRUE)) %>%
ungroup()
colnames(df_total_tmp) <- c('year', 'total_count')
df_total_tmp <- df_total_tmp %>%
left_join(df_total_cases_tmp, by=c('year'='year'))
Q
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
df_total_tmp <- data_total_filtered()
df_total_cases_tmp <- data_cases_filtered_geo()
df_total_tmp <- df_total_tmp %>%
group_by(year) %>%
summarise(count = sum(count, na.rm = TRUE)) %>%
ungroup()
df_total_cases_tmp <- df_total_cases_tmp %>%
group_by(year) %>%
summarise(count = sum(count, na.rm = TRUE)) %>%
ungroup()
colnames(df_total_tmp) <- c('year', 'total_count')
df_total_tmp <- df_total_tmp %>%
left_join(df_total_cases_tmp, by=c('year'='year'))
df_total_tmp
df_total_tmp$count
df_total_tmp <- data_total_filtered()
df_total_cases_tmp <- data_cases_filtered_geo()
df_total_tmp <- df_total_tmp %>%
group_by(year, state, States_Code) %>%
summarise(count = sum(count, na.rm = TRUE)) %>%
ungroup()
df_total_cases_tmp <- df_total_cases_tmp %>%
group_by(year, state, States_Code) %>%
summarise(count = sum(count, na.rm = TRUE)) %>%
ungroup()
colnames(df_total_tmp) <- c('year', 'total_count')
df_total_tmp <- df_total_tmp %>%
left_join(df_total_cases_tmp, by=c('year'='year', 'state'='state', 'States_Code'='States_Code'))
df_total_tmp <- data_total_filtered()
df_total_cases_tmp <- data_cases_filtered_geo()
df_total_tmp <- df_total_tmp %>%
group_by(year, state, States_Code) %>%
summarise(count = sum(count, na.rm = TRUE)) %>%
ungroup()
df_total_cases_tmp <- df_total_cases_tmp %>%
group_by(year, state, States_Code) %>%
summarise(count = sum(count, na.rm = TRUE)) %>%
ungroup()
colnames(df_total_tmp) <- c('year', 'state', 'States_Code', 'total_count')
df_total_tmp <- df_total_tmp %>%
left_join(df_total_cases_tmp, by=c('year'='year', 'state'='state', 'States_Code'='States_Code'))
Q
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
df_total_tmp <- data_total_filtered()
df_total_cases_tmp <- data_cases_filtered_geo()
df_total_tmp <- df_total_tmp %>%
group_by(year, state, States_Code) %>%
summarise(count = sum(count, na.rm = TRUE)) %>%
ungroup()
df_total_cases_tmp <- df_total_cases_tmp %>%
group_by(year, state, States_Code) %>%
summarise(count = sum(count, na.rm = TRUE)) %>%
ungroup()
colnames(df_total_tmp) <- c('year', 'state', 'States_Code', 'total_count')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
df_total_tmp <- data_total_filtered()
df_total_cases_tmp <- data_cases_filtered_geo()
df_total_tmp <- df_total_tmp %>%
group_by(year, state, States_Code) %>%
summarise(count = sum(count, na.rm = TRUE)) %>%
ungroup()
df_total_cases_tmp <- df_total_cases_tmp %>%
group_by(year, state, States_Code) %>%
summarise(count = sum(count, na.rm = TRUE)) %>%
ungroup()
colnames(df_total_tmp) <- c('year', 'state', 'States_Code', 'total_count')
df_total_tmp <- df_total_tmp %>%
left_join(df_total_cases_tmp, by=c('year'='year', 'state'='state', 'States_Code'='States_Code'))
head(df_total_tmp)
head(df_total_cases_tmp)
df_total_tmp <- df_total_tmp %>%
left_join(df_total_cases_tmp, by=c('year'='year', 'state'='state', 'States_Code'='States_Code'))
head(df_total_tmp)
df_total_tmp <- data_total_filtered()
df_total_cases_tmp <- data_cases_filtered_geo()
df_total_tmp <- df_total_tmp %>%
group_by(year, state, States_Code) %>%
summarise(count = sum(count, na.rm = TRUE)) %>%
ungroup()
df_total_cases_tmp <- df_total_cases_tmp %>%
group_by(year, state, States_Code) %>%
summarise(count = sum(count, na.rm = TRUE)) %>%
ungroup()
colnames(df_total_tmp) <- c('year', 'state', 'States_Code', 'total_count')
head(df_total_tmp)
df_total_tmp <- df_total_tmp %>%
left_join(df_total_cases_tmp, by=c('year'='year', 'state'='state', 'States_Code'='States_Code'))
head(df_total_tmp)
head(df_total_cases_tmp)
df_total_tmp <- data_total_filtered()
df_total_cases_tmp <- data_cases_filtered_geo()
df_total_tmp <- df_total_tmp %>%
group_by(year, state, States_Code) %>%
summarise(count = sum(count, na.rm = TRUE)) %>%
ungroup()
df_total_cases_tmp <- df_total_cases_tmp %>%
group_by(year, state, States_Code) %>%
summarise(count = sum(count, na.rm = TRUE)) %>%
ungroup()
colnames(df_total_tmp) <- c('year', 'state', 'States_Code', 'total_count')
Q
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
df_total_tmp <- data_total_filtered()
df_total_cases_tmp <- data_cases_filtered_geo()
df_total_tmp <- df_total_tmp %>%
group_by(year, state, States_Code) %>%
summarise(count = sum(count, na.rm = TRUE)) %>%
ungroup()
df_total_cases_tmp <- df_total_cases_tmp %>%
group_by(year, state, States_Code) %>%
summarise(count = sum(count, na.rm = TRUE)) %>%
ungroup()
colnames(df_total_tmp) <- c('year', 'state', 'States_Code', 'total_count')
head(df_total_cases_tmp)
head(df_total_tmp)
df_total_tmp <- data_total_filtered()
df_total_cases_tmp <- data_cases_filtered_geo()
df_total_tmp <- df_total_tmp %>%
group_by(year, state, States_Code) %>%
summarise(count = sum(count, na.rm = TRUE)) %>%
ungroup()
df_total_cases_tmp <- df_total_cases_tmp %>%
group_by(year, state, States_Code) %>%
summarise(count = sum(count, na.rm = TRUE)) %>%
ungroup()
head(df_total_tmp)
colnames(df_total_tmp) <- c('year', 'state', 'States_Code', 'total_count')
head(df_total_tmp)
df_total_tmp <- df_total_tmp %>%
left_join(df_total_cases_tmp, by=c('year'='year', 'state'='state', 'States_Code'='States_Code'))
head(df_total_tmp)
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
aa <- data_total_filtered_geo()
aa
aa$count
table(aa$count)
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
a <- data_total_filtered_geo()
head(a)
df2 <- data_total_filtered_geo()
df2$count
df2$perc
quantile(df2$perc,0.95)
casetypes_geo$label
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
head(df2)
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
remove.packages('plotly')
devtools::install_github("ropensci/plotly")
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
install.packages('plotly')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
shiny::runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
shiny::runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03_Project/0X_ShinyApp')
runApp('Projects/Columbia/01_EDV/03b_Project/exploratory_law.case/03_r_interactive')
runApp('Projects/Columbia/01_EDV/03b_Project/exploratory_law.case/03_r_interactive')
runApp('Projects/Columbia/01_EDV/03b_Project/exploratory_law.case/03_r_interactive')
runApp('Projects/Columbia/01_EDV/03b_Project/exploratory_law.case/03_r_interactive')
dim(df1)
df1
runApp('Projects/Columbia/01_EDV/03b_Project/exploratory_law.case/03_r_interactive')
runApp('Projects/Columbia/01_EDV/03b_Project/exploratory_law.case/03_r_interactive')
install.packages('skimr')
install.packages('svglite')
install.packages('svglite')
library(svglite)
install.packages(c("gdtools", "svglite"))
library(svglite)
library(knitr)
library(dplyr)
library(tidyverse)
library(gridExtra)
library(choroplethr)
library(choroplethrMaps)
library(scales)
library(skimr)
library(extracat)
library(xts)
library(tidyr)
library(viridis)
library(ggthemes)
library(httr)
library(rjson)
library(data.table)
library(tidycensus)
library(plotly)
setwd("~/Projects/Columbia/01_EDV/03b_Project/exploratory_law.case/02_r_report/")
date_lim1 = "1967-01-01"
date_lim2 = "2017-01-01"
start_year = as.integer(strsplit(date_lim1, "-")[[1]][1])
end_year = as.integer(strsplit(date_lim2, "-")[[1]][1])-1
keyword = "sexual harassment"
col_num = 47
data(df_state_demographics)
file_list <- list.files(path='../data/02_processed_csvs/', pattern="*text.csv")
totalList = data.frame(year=integer(), value1=integer(), value2=integer(), value3=integer(), region=character())
for (name in file_list){
region <- (strsplit(name, "-")[[1]][1])
data <- fread(paste0('../data/02_processed_csvs/', name), sep=",")
data$cb_data_text_0 = ifelse(data[,c(47)] > 0, 1, 0)
data <- data %>% group_by(decision_date) %>% summarise(total_cases = n(), value1 = sum(cb_data_text_0))
data$decision_date <- as.Date(data$decision_date, format="%Y-%m-%d")
data <- data %>% na.omit() %>% filter(decision_date >= as.Date(date_lim1) & decision_date < as.Date(date_lim2))
if(nrow(data)>0){
data['year'] <- as.integer(format(data$decision_date, "%Y"))
data <- data %>% group_by(year) %>% summarise(total_cases = sum(total_cases), value1 = sum(value1))
data['region'] <- tolower(region)
totalList <- rbind(totalList, data)
}
}
totalList$value <- totalList$value1/totalList$total_cases
dir.create(file.path("../data/05_finalreport_plots/", keyword), showWarnings = FALSE)
write.csv(totalList, file = paste0("../data/05_finalreport_plots/", keyword, "/", keyword, "_", toString(start_year), "_", toString(end_year), ".csv"))
choropleths = list()
index = 1
for (i in seq(from=start_year, to=end_year)){
mapData <- totalList %>% filter(year == i)
mapData <- mapData[,c('region', 'value')]
for (state in setdiff(df_state_demographics$region, mapData$region)) {
df<-data.frame(state,0)
names(df)<-c("region","value")
mapData <- rbind(mapData, df)
}
mapData = mapData[!mapData$region %in% c("alaska", "hawaii"), ]
c = StateChoropleth$new(mapData)
c$title = paste0("Appearance of the word ", keyword, " in US Case law, year=", i)
c$set_num_colors(1)
c$show_labels=FALSE
c$clip()
c$bind()
choropleth <- c$render()
df_state_labels = data.frame(long = state.center$x, lat = state.center$y, name=tolower(state.name), label = state.abb)
df_state_labels = df_state_labels[!df_state_labels$name %in% c("hawaii"), ]
choropleth = choropleth + geom_text(data = df_state_labels, aes(long, lat, label = label, group = NULL), color = 'black', check_overlap = TRUE)
choropleth = choropleth + scale_fill_gradient2(low = "gray", mid = "yellow", high = "red", midpoint=0.025, labels = percent, limits=c(0, 0.05))
choropleth = choropleth + theme(text = element_text(size=10))
choropleths[[index]] = choropleth
index = index + 1
}
setwd(paste0("../data/05_finalreport_plots/", keyword))
choroplethr_animate(choropleths)
date_lim1 = "1967-01-01"
date_lim2 = "2017-01-01"
start_year = as.integer(strsplit(date_lim1, "-")[[1]][1])
end_year = as.integer(strsplit(date_lim2, "-")[[1]][1])-1
file_list <- list.files(path='../data/02_processed_csvs/', pattern="*text.csv")
totalList = data.frame(year=integer(), total=integer(), region=character())
for (name in file_list){
region <- (strsplit(name, "-")[[1]][1])
data <- fread(name, sep=",")
data <- data %>% group_by(decision_date) %>% summarise(total = n())
data$decision_date <- as.Date(data$decision_date, format="%Y-%m-%d")
data <- data %>% na.omit() %>% filter(decision_date >= as.Date(date_lim1) & decision_date < as.Date(date_lim2))
if(nrow(data)>0){
data['year'] <- as.integer(format(data$decision_date, "%Y"))
data <- data %>% group_by(year) %>% summarise(total = sum(total))
data['region'] <- tolower(region)
totalList <- rbind(totalList, data)
}
}
for (name in file_list){
region <- (strsplit(name, "-")[[1]][1])
data <- fread(paste0('../data/02_processed_csvs/', name), sep=",")
data <- data %>% group_by(decision_date) %>% summarise(total = n())
data$decision_date <- as.Date(data$decision_date, format="%Y-%m-%d")
data <- data %>% na.omit() %>% filter(decision_date >= as.Date(date_lim1) & decision_date < as.Date(date_lim2))
if(nrow(data)>0){
data['year'] <- as.integer(format(data$decision_date, "%Y"))
data <- data %>% group_by(year) %>% summarise(total = sum(total))
data['region'] <- tolower(region)
totalList <- rbind(totalList, data)
}
}
file_list
file_list <- list.files(path='../data/02_processed_csvs/', pattern="*text.csv")
file_list
WD = "~/Projects/Columbia/01_EDV/03b_Project/exploratory_law.case/02_r_report/"
setwd(WD)
census_api_key("0105d9a1dc7de5ac59c61f59effe799cc8a04be5", install = TRUE)
pop <- get_acs(geography = "state", variables = c(popluation = "B00001_001"), year=2010)
census_api_key("0105d9a1dc7de5ac59c61f59effe799cc8a04be5", install = TRUE)
pop <- get_acs(geography = "state", variables = c(popluation = "B00001_001"), year=2010)
pop <- get_acs(geography = "state", variables = c(popluation = "B00001_001"), year=2010, key = "0105d9a1dc7de5ac59c61f59effe799cc8a04be5")
date_lim1 = "1967-01-01"
date_lim2 = "2017-01-01"
start_year = as.integer(strsplit(date_lim1, "-")[[1]][1])
end_year = as.integer(strsplit(date_lim2, "-")[[1]][1])-1
file_list <- list.files(path='../data/02_processed_csvs/', pattern="*text.csv")
totalList = data.frame(year=integer(), total=integer(), region=character())
for (name in file_list){
region <- (strsplit(name, "-")[[1]][1])
data <- fread(paste0('../data/02_processed_csvs/', name), sep=",")
data <- data %>% group_by(decision_date) %>% summarise(total = n())
data$decision_date <- as.Date(data$decision_date, format="%Y-%m-%d")
data <- data %>% na.omit() %>% filter(decision_date >= as.Date(date_lim1) & decision_date < as.Date(date_lim2))
if(nrow(data)>0){
data['year'] <- as.integer(format(data$decision_date, "%Y"))
data <- data %>% group_by(year) %>% summarise(total = sum(total))
data['region'] <- tolower(region)
totalList <- rbind(totalList, data)
}
}
census_api_key("0105d9a1dc7de5ac59c61f59effe799cc8a04be5", install = TRUE)
pop <- get_acs(geography = "state", variables = c(popluation = "B00001_001"), year=2010, key = "0105d9a1dc7de5ac59c61f59effe799cc8a04be5")
pop$NAME <- tolower(pop$NAME)
colnames(pop) <- c('GEOID', 'region', 'variable', 'estimate')
pop$estimate <- pop$estimate/1000
totalList <- merge(totalList, pop, by='region')
totalList$value = totalList$total / totalList$estimate
totalList <- totalList[, c("year", "region", "total", "estimate", "value")]
keyword='total'
dir.create(file.path("../data/05_finalreport_plots/", keyword), showWarnings = FALSE)
write.csv(totalList, file = paste0("../data/05_finalreport_plots/", keyword, "/", keyword, "_", toString(start_year), "_", toString(end_year), ".csv"))
