labeling_args = list(
gp_labels = gpar(fontsize = 6, fontface = 3),
rot_labels = c(45, 0, 0, 90)
))
vcd::mosaic(dominant_color_grouped ~ Group, data, direction = c("v", "h"),
labeling_args = list(
gp_labels = gpar(fontsize = 6, fontface = 3),
rot_labels = c(45, 0, 0, 0)
))
vcd::mosaic(dominant_color_grouped ~ Group, data, direction = c("v", "h"),
labeling_args = list(
gp_labels = gpar(fontsize = 6, fontface = 3),
rot_labels = c(45, 0, 0, 0),
offset_labels = c(10, 0, 0, 10)
))
vcd::mosaic(dominant_color_grouped ~ Group, data, direction = c("v", "h"),
labeling_args = list(
gp_labels = gpar(fontsize = 6, fontface = 3),
rot_labels = c(45, 0, 0, 0),
offset_labels = c(1, 0, 0, 1)
))
sort(-table(data$dominant_color))
vcd::mosaic(dominant_color_grouped ~ Group, data, direction = c("v", "h"),
labeling_args = list(
gp_labels = gpar(fontsize = 6, fontface = 3),
rot_labels = c(45, 0, 0, 0),
offset_labels = c(1, 0, 0, 1)
),
gp = gpar(fill = c('BLACK', 'WHITE', 'BROWN', 'TAN', 'BLUE', 'GREEN')))
vcd::mosaic(dominant_color_grouped ~ Group, data, direction = c("v", "h"),
labeling_args = list(
gp_labels = gpar(fontsize = 6, fontface = 3),
rot_labels = c(45, 0, 0, 0),
offset_labels = c(1, 0, 0, 1)
),
gp = gpar(fill = c('BLACK', 'WHITE', 'RED', 'TAN', 'BLUE', 'GREEN')))
vcd::mosaic(dominant_color_grouped ~ Group, data, direction = c("v", "h"),
labeling_args = list(
gp_labels = gpar(fontsize = 6, fontface = 3),
rot_labels = c(45, 0, 0, 0),
offset_labels = c(1, 0, 0, 1)
),
gp = gpar(fill = c('BLACK', 'WHITE', 'burlywood4', 'TAN', 'BLUE', 'GREEN')))
vcd::mosaic(dominant_color_grouped ~ Group, data, direction = c("v", "h"),
labeling_args = list(
gp_labels = gpar(fontsize = 6, fontface = 3),
rot_labels = c(45, 0, 0, 0),
offset_labels = c(1, 0, 0, 1)
),
gp = gpar(fill = c('BLACK', 'WHITE', 'burlywood4', 'TAN', 'lightgoldenrod', 'gray')))
table(data$dominant_color_grouped)
top5_colors <- names(sort(-table(data$dominant_color))[1:5])
data <- data %>%
mutate(dominant_color_grouped = ifelse(dominant_color %in% top5_colors,
dominant_color,
'OTHER'))
table(data$dominant_color_grouped)
data$dominant_color_grouped <- factor(as.character(data$dominant_color_grouped), levels =
c(top5_colors, 'OTHER'))
table(data$dominant_color_grouped)vcd::mosaic(dominant_color_grouped ~ Group, data, direction = c("v", "h"),
labeling_args = list(
gp_labels = gpar(fontsize = 6, fontface = 3),
rot_labels = c(45, 0, 0, 0),
offset_labels = c(1, 0, 0, 1)
),
gp = gpar(fill = c('BLACK', 'WHITE', 'burlywood4', 'TAN', 'lightgoldenrod', 'gray')))
vcd::mosaic(dominant_color_grouped ~ Group, data, direction = c("v", "h"),
labeling_args = list(
gp_labels = gpar(fontsize = 6, fontface = 3),
rot_labels = c(45, 0, 0, 0),
offset_labels = c(1, 0, 0, 1)
),
gp = gpar(fill = c('BLACK', 'WHITE', 'burlywood4', 'TAN', 'lightgoldenrod', 'gray')))
vcd::mosaic(dominant_color_grouped ~ Group, data %>% filter(dominant_color_grouped != 'OTHER'), direction = c("v", "h"),
labeling_args = list(
gp_labels = gpar(fontsize = 6, fontface = 3),
rot_labels = c(45, 0, 0, 0),
offset_labels = c(1, 0, 0, 1)
),
gp = gpar(fill = c('BLACK', 'WHITE', 'burlywood4', 'TAN', 'lightgoldenrod', 'gray')))
vcd::mosaic(dominant_color_grouped ~ Group, data %>% filter(dominant_color_grouped != 'OTHER'), direction = c("v", "h"),
labeling_args = list(
gp_labels = gpar(fontsize = 6, fontface = 3),
rot_labels = c(45, 0, 0, 0),
offset_labels = c(1, 0, 0, 1)
),
gp = gpar(fill = c('BLACK', 'WHITE', 'burlywood4', 'TAN', 'lightgoldenrod')))
vcd::mosaic(dominant_color_grouped ~ Group, data %>% filter(dominant_color_grouped != 'OTHER'), direction = c("v", "h"),
labeling_args = list(
gp_labels = gpar(fontsize = 6, fontface = 3),
rot_labels = c(45, 0, 0, 0),
offset_labels = c(1, 0, 0, 1)
),
gp = gpar(fill = c('BLACK', 'WHITE', 'burlywood4', 'TAN', 'lightgoldenrod', 'gray')))
vcd::mosaic(dominant_color_grouped ~ Group, data_dominant_color_grouped_woOther, direction = c("v", "h"),
labeling_args = list(
gp_labels = gpar(fontsize = 6, fontface = 3),
rot_labels = c(45, 0, 0, 0),
offset_labels = c(1, 0, 0, 1)
),
gp = gpar(fill = c('BLACK', 'WHITE', 'burlywood4', 'TAN', 'lightgoldenrod')))
data_dominant_color_grouped_woOther <- data %>%
filter(dominant_color_grouped != 'OTHER')
data_dominant_color_grouped_woOther$dominant_color_grouped <- factor(as.character(data_dominant_color_grouped_woOther$dominant_color_grouped), levels =
c(top5_colors))
vcd::mosaic(dominant_color_grouped ~ Group, data_dominant_color_grouped_woOther, direction = c("v", "h"),
labeling_args = list(
gp_labels = gpar(fontsize = 6, fontface = 3),
rot_labels = c(45, 0, 0, 0),
offset_labels = c(1, 0, 0, 1)
),
gp = gpar(fill = c('BLACK', 'WHITE', 'burlywood4', 'TAN', 'lightgoldenrod')))
library(grid)
data$spayed_or_neutered
theme_dotplot <- theme_bw(18) +
theme(axis.text.y = element_text(size = rel(.75)),
axis.ticks.y = element_blank(),
axis.title.x = element_text(size = rel(.50)),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(size = 0.5),
panel.grid.minor.x = element_blank(),
plot.title = element_text(size = rel(.75)))
data <- data %>%
mutate(spayed_or_neutered_num = ifelse(spayed_or_neutered=='Yes', 1, 0))
data_zip <- data %>%
group_by(zip_code) %>%
summarise(avg = mean(spayed_or_neutered))
ggplot(data_zip, aes(x = avg, y = zip_code)) +
geom_point(color = "blue") +
ylab("") +
theme_dotplot
data_zip
data_zip <- data %>%
group_by(zip_code) %>%
summarise(avg = mean(spayed_or_neutered_num))
ggplot(data_zip, aes(x = avg, y = zip_code)) +
geom_point(color = "blue") +
ylab("") +
theme_dotplot
ggplot(data_zip, aes(x = avg, y = as.factor(zip_code))) +
geom_point(color = "blue") +
ylab("") +
theme_dotplot
data_zip <- data %>%
group_by(zip_code) %>%
summarise(avg = mean(spayed_or_neutered_num)) %>%
arrange(desc(avg))
data_zip$zip_code <- factor(data_zip$zip_code, levels = unique(data_zip$zip_code))
ggplot(data_zip, aes(x = avg, y = zip_code)) +
geom_point(color = "blue") +
ylab("") +
theme_dotplot
data_zip <- data %>%
group_by(zip_code) %>%
summarise(avg = mean(spayed_or_neutered_num)) %>%
arrange((avg))
data_zip$zip_code <- factor(data_zip$zip_code, levels = unique(data_zip$zip_code))
ggplot(data_zip, aes(x = avg, y = zip_code)) +
geom_point(color = "blue") +
ylab("") +
theme_dotplot
data_zip
tail(data_zip)
as.matrix(data_zip)
tidyquant
library(tidyquant)
install.packages("tidyquant")
library(tidyquant)
help(tidyquant)
help(tg_get)
FANG
FANG$FB
FANG$symbol
unique(FANG$symbol)
ggplot(data=FANG, aes(x=date, y=close, group=symbol)) +
geom_line()
ggplot(data=FANG, aes(x=date, y=close, group=symbol, color=symbol)) +
geom_line()
FANG
FANG %>% filter(symbol=='AMZN')
FANG %>% filter(symbol=='AMZN') %>% arrange(date)
FANG %>% filter(symbol=='GOOG') %>% arrange(date)
FANG %>% filter(symbol=='NFLX') %>% arrange(date)
FANG_2 <- FANG %>%
mutate(close = ifelse(symbol=='FB', close/28, close)) %>%
mutate(close = ifelse(symbol=='AMZN', close/257, close)) %>%
mutate(close = ifelse(symbol=='GOOG', close/723, close)) %>%
mutate(close = ifelse(symbol=='FB', close/92, close))
ggplot(data=FANG_2, aes(x=date, y=close, group=symbol, color=symbol)) +
geom_line()
FANG_2 <- FANG %>%
mutate(close = ifelse(symbol=='FB', close/28, close)) %>%
mutate(close = ifelse(symbol=='AMZN', close/257, close)) %>%
mutate(close = ifelse(symbol=='GOOG', close/723, close)) %>%
mutate(close = ifelse(symbol=='NFLX', close/92, close))
ggplot(data=FANG_2, aes(x=date, y=close, group=symbol, color=symbol)) +
geom_line()
ggplot(data=FANG, aes(x=date, y=close, group=symbol, color=symbol)) +
geom_line()
data$breed
table(data$breed)
sort(table(data$breed))
top10 <- colnames(sort(-table(data$breed)))[1:11]
toptop10 <- names(sort(-table(data$breed)))[1:11]
top10 <- names(sort(-table(data$breed)))[1:11]
top10
data_pres <- data %>%
mutate(breed_clean = ifelse(breed %in% top10, breed, 'Mixed/Other')) %>%
group(breed_clean) %>%
summarise(count = n())
top10 <- names(sort(-table(data$breed)))[1:11]
data_pres <- data %>%
mutate(breed_clean = ifelse(breed %in% top10, breed, 'Mixed/Other')) %>%
group_by(breed_clean) %>%
summarise(count = n())
data_pres
top10 <- names(sort(-table(data$breed)))[1:11]
data_pres <- data %>%
mutate(breed_clean = ifelse(breed %in% top10, breed, 'Mixed/Other')) %>%
group_by(breed_clean) %>%
summarise(count = n())
data_pres <- as.data.frame(data_pres)
data_pres$breed_clean <- factor(data_pres$breed_clean, levels = c(top10[2:11], top10[1]))
ggplot(data_pres, aes(x=breed_clean, y=count)) +
geom_bar(stat = "identity") +
xlab('Variable names') +
ylab('Missing values in %') +
coord_flip()
data_pres$breed_clean <- factor(data_pres$breed_clean, levels = c(top10[1], top10[11:2]))
ggplot(data_pres, aes(x=breed_clean, y=count)) +
geom_bar(stat = "identity") +
xlab('Variable names') +
ylab('Missing values in %') +
coord_flip()
ggplot(data_pres, aes(x=breed_clean, y=count)) +
geom_bar(stat = "identity") +
geom_text(aes(label=y), vjust=0) +
xlab('Dog breed') +
ylab('No. of registered dogs') +
title('')
coord_flip()
ggplot(data_pres, aes(x=breed_clean, y=count)) +
geom_bar(stat = "identity") +
geom_text(aes(label=y), vjust=0) +
xlab('Dog breed') +
ylab('No. of registered dogs') +
title('') +
coord_flip()
ggplot(data_pres, aes(x=breed_clean, y=count)) +
geom_bar(stat = "identity") +
geom_text(aes(label=count), vjust=0) +
xlab('Dog breed') +
ylab('No. of registered dogs') +
title('') +
coord_flip()
ggplot(data_pres, aes(x=breed_clean, y=count)) +
geom_bar(stat = "identity") +
geom_text(aes(label=count), vjust=100) +
xlab('Dog breed') +
ylab('No. of registered dogs') +
title('') +
coord_flip()
ggplot(data_pres, aes(x=breed_clean, y=count)) +
geom_bar(stat = "identity") +
geom_text(aes(label=count), vjust=10) +
xlab('Dog breed') +
ylab('No. of registered dogs') +
title('') +
coord_flip()
ggplot(data_pres, aes(x=breed_clean, y=count)) +
geom_bar(stat = "identity") +
geom_text(aes(label=count), vjust=1) +
xlab('Dog breed') +
ylab('No. of registered dogs') +
title('') +
coord_flip()
ggplot(data_pres, aes(x=breed_clean, y=count)) +
geom_bar(stat = "identity") +
geom_text(aes(label=count), hjust=1) +
xlab('Dog breed') +
ylab('No. of registered dogs') +
title('') +
coord_flip()
ggplot(data_pres, aes(x=breed_clean, y=count)) +
geom_bar(stat = "identity") +
geom_text(aes(label=count), hjust=-1) +
xlab('Dog breed') +
ylab('No. of registered dogs') +
title('') +
coord_flip()
ggplot(data_pres, aes(x=breed_clean, y=count)) +
geom_bar(stat = "identity") +
geom_text(aes(label=count), hjust=-0.3) +
xlab('Dog breed') +
ylab('No. of registered dogs') +
title('') +
coord_flip()
ggplot(data_pres, aes(x=breed_clean, y=count)) +
geom_bar(stat = "identity") +
geom_text(aes(label=count), hjust=-0.3) +
xlab('Dog breed') +
ylab('No. of registered dogs') +
title('') +
xlim(0,50000) +
coord_flip()
ggplot(data_pres, aes(x=breed_clean, y=count)) +
geom_bar(stat = "identity") +
geom_text(aes(label=count), hjust=-0.3) +
xlab('Dog breed') +
ylab('No. of registered dogs') +
title('') +
ylim(0,50000) +
coord_flip()
ggplot(data_pres, aes(x=breed_clean, y=count)) +
geom_bar(stat = "identity") +
geom_text(aes(label=count), hjust=-0.3) +
xlab('Dog breed') +
ylab('No. of registered dogs') +
title('') +
ylim(0,500000) +
coord_flip()
ggplot(data_pres, aes(x=breed_clean, y=count)) +
geom_bar(stat = "identity") +
geom_text(aes(label=count), hjust=-0.3) +
xlab('Dog breed') +
ylab('No. of registered dogs') +
title('') +
ylim(0,55000) +
coord_flip()
ggplot(data_pres, aes(x=breed_clean, y=count/1000)) +
geom_bar(stat = "identity") +
geom_text(aes(label=count), hjust=-0.3) +
xlab('Dog breed') +
ylab('No. of registered dogs') +
title('') +
ylim(0,55) +
coord_flip()
ggplot(data_pres, aes(x=breed_clean, y=count/1000)) +
geom_bar(stat = "identity") +
geom_text(aes(label=count), hjust=-0.3) +
xlab('Dog breed') +
ylab('No. of registered dogs') +
title('') +
ylim(0,60) +
coord_flip()
ggplot(data_pres, aes(x=breed_clean, y=count/1000)) +
geom_bar(stat = "identity") +
geom_text(aes(label=count), hjust=-0.3) +
xlab('Dog breed') +
ylab('No. of registered dogs') +
title('') +
ylim(0,70) +
coord_flip()
ggplot(data_pres, aes(x=breed_clean, y=count/1000)) +
geom_bar(stat = "identity") +
geom_text(aes(label=count), hjust=-0.3) +
xlab('Dog breed') +
ylab('No. of registered dogs') +
title('') +
ylim(0,75) +
coord_flip()
ggplot(data_pres, aes(x=breed_clean, y=count/1000)) +
geom_bar(stat = "identity") +
geom_text(aes(label=round(count/1000,1)), hjust=-0.3) +
xlab('Dog breed') +
ylab('No. of registered dogs [in \'k]') +
title('') +
ylim(0,75) +
coord_flip()
ggplot(data_pres, aes(x=breed_clean, y=count/1000)) +
geom_bar(stat = "identity") +
geom_text(aes(label=round(count/1000,1)), hjust=-0.3) +
xlab('Dog breed') +
ylab('No. of registered dogs [in \'k]') +
title('') +
ylim(0,70) +
coord_flip()
ggplot(data_pres, aes(x=breed_clean, y=count/1000)) +
geom_bar(stat = "identity") +
geom_text(aes(label=round(count/1000,1)), hjust=-0.3) +
xlab('Dog breed') +
ylab('No. of registered dogs [in \'k]') +
title('You should be prepared to treat many different dog breeds. \nThere is no dominat one in New York.') +
ylim(0,70) +
coord_flip()
ggplot(data_pres, aes(x=breed_clean, y=count/1000)) +
geom_bar(stat = "identity") +
geom_text(aes(label=round(count/1000,1)), hjust=-0.3) +
xlab('Dog breed') +
ylab('No. of registered dogs [in \'k]') +
ggtitle('You should be prepared to treat many different dog breeds. \nThere is no dominat one in New York.') +
ylim(0,70) +
coord_flip()
knitr::opts_chunk$set(message = FALSE,
warning = FALSE)
# Load libraries
library(tidyverse)
# Load libraries
library(tidyverse)
# Load libraries
library(tidyverse)
library(gridExtra)
library(boot)
library(cluster)
library(scales)
library(carData)
library(extracat)
library(extracat)
library(pgmm)
library(grid)
library(tidyquant)
library(tidyquant)
library(choroplethr)
library(tidyquant)
library(choroplethr)
library(choroplethrZip)
setwd('/Users/bennys/Projects/Columbia/01_EDV/03_Project/exploratory_law.case')
doc_freq <- read_csv(file = 'doc_freq_dict.csv')
doc_freq
doc_freq <- as.data.frame(doc_freq)
str(data)
head(doc_freq)
doc_freq <- read_csv(file = 'doc_freq_dict.csv', )
doc_freq <- as.data.frame(doc_freq)
str(data)
doc_freq <- read_csv(file = 'doc_freq_dict.csv', )
doc_freq <- as.data.frame(doc_freq)
colnames(doc_freq) <- c('Word', 'No')
str(data)
hist(doc_freq$No)
hist(doc_freq %>% filter(No > 5) .$No)
hist(doc_freq %>% filter(No > 5) %>% .$No)
hist(doc_freq %>% filter(No > 50) %>% .$No)
hist(doc_freq %>% filter(No > 100) %>% .$No)
hist(doc_freq %>% filter(No > 1000) %>% .$No)
hist(doc_freq %>% filter(No > 10000) %>% .$No)
doc_freq_filtered = doc_freq %>%
filter(No > 1800*5) %>%
arrange(desc(No)) %>%
top_n(1000)
library(tidyverse)
library(gridExtra)
library(boot)
library(scales)
library(extracat)
library(grid)
setwd('/Users/bennys/Projects/Columbia/01_EDV/03_Project/exploratory_law.case')
doc_freq <- read_csv(file = 'doc_freq_dict.csv', )
doc_freq <- as.data.frame(doc_freq)
colnames(doc_freq) <- c('Word', 'No')
str(doc_freq)
doc_freq_filtered = doc_freq %>%
filter(No > 1800*5) %>%
arrange(desc(No)) %>%
top_n(1000)
doc_freq_filtered
dim(doc_freq_filtered)
doc_freq_filtered = doc_freq %>%
filter(No > 1800*5) %>%
arrange(desc(No))
dim(doc_freq_filtered)
doc_freq_filtered
'sexual' %in% doc_freq_filtered
'crime' %in% doc_freq_filtered
'harassment' %in% doc_freq_filtered
'sexual' %in% doc_freq
'sexual' %in% doc_freq$Word
'harassment' %in% doc_freq_filtered$Word#
'harassment' %in% doc_freq_filtered$Word
'sexual' %in% doc_freq_filtered$Word
doc_freq['sexual']
doc_freq %>% filter(Word == 'sexual')
doc_freq %>% filter(Word == 'crime')
doc_freq %>% filter(Word == 'housing')
doc_freq %>% filter(Word == 'Microsoft')
doc_freq %>% filter(Word == 'Hate')
doc_freq %>% filter(Word == 'hate')
doc_freq %>% filter(Word == 'car')
doc_freq %>% filter(Word == 'compensation')
doc_freq %>% filter(Word == 'slip')
doc_freq %>% filter(Word == 'fall')
doc_freq %>% filter(Word == 'dog')
doc_freq
doc_freq_filtered
install.packages("wordcloud")
install.packages("RColorBrewer")
library(wordcloud)
library(RColorBrewer)
wordcloud(words = doc_freq_filtered$word, freq = doc_freq_filtered$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
wordcloud(words = doc_freq_filtered$word, freq = doc_freq_filtered$No, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
wordcloud(words = doc_freq_filtered$word, freq = doc_freq_filtered$No, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
wordcloud(words = doc_freq_filtered$Word, freq = doc_freq_filtered$No, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
head(doc_freq %>% filter(No > 1800*4))
min(doc_freq %>% filter(No > 1800*4) %>% select(No))
doc_freq %>% filter(No > 1800*4) %>% arrange(No) %>% top_n(10))
doc_freq %>% filter(No > 1800*4) %>% arrange(No) %>% top_n(10))
doc_freq %>% filter(No > 1800*4) %>% arrange(No) %>% top_n(10)
doc_freq %>% filter(No > 1800*4) %>% arrange(desc(No)) %>% top_n(10)
doc_freq %>% filter(No > 1800*4) %>% arrange(aesc(No)) %>% top_n(10)
doc_freq %>% filter(No > 1800*4) %>% arrange(No) %>% top_n(10, wt = -No)
doc_freq %>% filter(No > 1800*2) %>% arrange(No) %>% top_n(10, wt = -No)
dim(doc_freq_filtered)
dim(doc_freq_filtered)[1]
doc_freq_filtered_filtered <- doc_freq_filtered %>%
slice(100:dim(doc_freq_filtered)[1])#
dim(doc_freq_filtered_filtered)
